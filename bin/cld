#!/bin/bash
HELP_DESC=$(cat << 'EOL'
Main ClassicDevOps CLI access system utility
EOL
)
HELP_ARGS=$(cat << 'EOL'
$1                       First PATTERN filtering allowed instances
$2                       Second PATTERN filtering allowed instances
$3                       Third PATTERN filtering allowed instances
--list                   Show filtered instances and exit
--json                   Using together --list to json output
--beauty                 Using together with --list and --json option to beautify json output
--groups=GROUP1,GROUP2   Filtering by instance groups
--debug                  Verbose output of connection
--all                    Admin user option - setting up for one time run with all groups existing at CLD server regardless to access matrix
EOL
)
HELP_EXAMPLES=$(cat << 'EOL'
cld #CLI,WEB
cld prod 1.2. #CLI,WEB
cld --groups=gcloud prod --debug #CLI,WEB
cld prod 1.2. --list 
cld prod 1.2. --groups=default --list --json --beauty
EOL
)

source /var/cld/bin/include/cldfuncs

for i in ${CLDOPTS}
do
  case $i in
    -g=*|-groups=*|--groups=*) CLD_GROUPS="${i#*=}" ;;
    -l|-list|--list) LIST=1                         ;;
    -gl|-lg|-grouplist|--grouplist) CLD_GROUP_LIST=1;;
    -j|-json|--json) JSON=1                         ;;
    -b|-beauty|--beauty) JSON_BEAUTY=1              ;;
    -d|-debug|--debug) VERBOSE=" -v"                ;;
    -a|-all|--all) CLD_ALL_GROUPS_ARG="--all"       ;;
    -*)                                             ;;
    *) let ii++; declare ARG$ii=${i}                ;;
  esac
done


[ "$JSON" == "1" ] && JSONARG='--json'
[ "$JSON_BEAUTY" == "1" -a "$FROM" == "API" ] && JSON_BEAUTY_ARG='| jq . -C'
[ "$JSON_BEAUTY" == "1" -a "$FROM" != "API" ] && JSON_BEAUTY_ARG='| jq .'
if [ "$JSON_BEAUTY" == "1" -a "$FROM" == "API" -a "${CLD_GROUP_LIST}" == "1" ]; then
  JSON_BEAUTY_ARG='| head -c -1 | jq -R -s -C "split(\"\n\")"'
elif [ "$JSON_BEAUTY" == "1" -a "$FROM" != "API" -a "${CLD_GROUP_LIST}" == "1" ]; then
  JSON_BEAUTY_ARG='| head -c -1 | jq -R -s "split(\"\n\")"'
elif [ "$JSON" == "1" -a "${CLD_GROUP_LIST}" == "1" ]; then
  JSON_BEAUTY_ARG='| head -c -1 | jq -R -s -c "split(\"\n\")"'
fi


if [ "$LIST" = "1" ] ; then source <(echo -n CLOUDS_USER_ALLOWED --groups="${CLD_GROUPS}" "${JSONARG}" "$ARG1" "$ARG2" "$ARG3" ${CLD_ALL_GROUPS_ARG} ${JSON_BEAUTY_ARG}) ; exit 0 ; fi
if [ "${CLD_GROUP_LIST}" = "1" ]; then source <(echo -n CLOUDS_USER_ALLOWED --grouplist ${CLD_ALL_GROUPS_ARG} ${JSON_BEAUTY_ARG}) ; exit 0 ; fi

echo "Please select instance to enter"
select VM in $(CLOUDS_USER_ALLOWED --groups="${CLD_GROUPS}" "$ARG1" "$ARG2" "$ARG3" "$CLD_ALL_GROUPS_ARG")
do
  CLD_LOGS
  if [ "$VM" ]
  then
    INSTANCE_GROUP_FUNCS
    echo "You had chosen ${GROUP} $VM"
    $CLD_VARS
    echo
    $CLD_TERMINAL || echo "Connection FAILED - use --debug argument to clarify reason"
    exit 0
  else
    echo "you choosed incorrect instance, please try again and type digits only"
    exit 0
  fi
  break
done
echo
echo "There is no any allowed instances - try remove filter arguments or ask your system administrator add/share it"