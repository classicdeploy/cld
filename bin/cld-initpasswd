#!/bin/bash
HELP_DESC=$(cat << 'EOL'
Utility for initialization users according access matrix file /var/cld/creds/passwd
Affect /etc/sudoers and ~/.bashrc file for each ClassicDevOps user
EOL
)
HELP_ARGS=$(cat << 'EOL'
--user=USERNAME          Username filter - all users will reinitialized if argument not passed
EOL
)
HELP_EXAMPLES=$(cat << 'EOL'
cld-initpasswd
cld-initpasswd --user=jonhdoe
EOL
)
source /var/cld/bin/include/cldfuncs

for i in ${CLDOPTS}
do
case $i in
-u=*|-user=*|--user=*) CLDUSER="${i#*=}"     ;;
*) ;;
esac
done

CLD_TOOLS_LIST=$(ls /var/cld/bin/* /var/cld/modules/*/bin/* -pd | grep -v include)
rev <<< "$CLD_TOOLS_LIST" | cut -d / -f 1 | rev | head -c -1 | tr '\n' ',' | cat - <(echo) > /var/cld/creds/tools_list
rev <<< "$CLD_TOOLS_LIST" | cut -d / -f 3- | rev | sort -u | rev | cut -d / -f 1 | rev | head -c -1 | tr '\n' ',' | cat - <(echo) > /var/cld/creds/modules_list

egrep -q 'Defaults\ +env_keep\ +\+=\ +\"FROM\"' /etc/sudoers || echo 'Defaults env_keep += "FROM"' >> /etc/sudoers
[ "$CLDUSER" ] && USER_SETS=$(grep -v "^#" /var/cld/creds/passwd | grep "^${CLDUSER}:") || USER_SETS=$(grep -v "^#" /var/cld/creds/passwd)
for USER_SET in ${USER_SETS}
do
USER_NAME=$(cut -d : -f 1 <<< $USER_SET)
USER_TGID=$(cut -d : -f 2 <<< $USER_SET)
USER_TOKEN=$(cut -d : -f 3 <<< $USER_SET)
USER_MODULES=$(cut -d : -f 4 <<< $USER_SET)
USER_UTILITES=$(cut -d : -f 5 <<< $USER_SET)

[ "$USER_MODULES" ] || USER_MODULES=NONE
[ "$USER_UTILITES" ] || USER_UTILITES=NONE

if grep -q "^${USER_NAME}:" /etc/passwd
then
    echo PAM user $USER_NAME found
else
    echo PAM user $USER_NAME not found - creating
    USER_PASSWORD=$(passwordgen)

    if [ "$(wc -c <<< "${USER_NAME}")" -gt "32" ] ; then
        USER_NAME_PAM=$(egrep -o "^[A-Za-z0-9_.-]{0,31}" <<< "${USER_NAME}")
        useradd ${USER_NAME_PAM}
        echo -e "${USER_PASSWORD}\n${USER_PASSWORD}\n" | passwd ${USER_NAME_PAM} &>/dev/null
        sed -i -e "s#^${USER_NAME_PAM}:#${USER_NAME}:#g" /etc/passwd /etc/shadow /etc/group
        sed -i -e "s#/home/${USER_NAME_PAM}:#/home/${USER_NAME}:#g" /etc/passwd
        mv /home/${USER_NAME_PAM} /home/${USER_NAME}
    else
        useradd ${USER_NAME} --shell /bin/bash
        echo -e "${USER_PASSWORD}\n${USER_PASSWORD}\n" | passwd ${USER_NAME} &>/dev/null
    fi

    mkdir /home/${USER_NAME} &>/dev/null
    chown -R ${USER_NAME}:${USER_NAME} /home/${USER_NAME}
    echo
    echo user created:
    echo user: ${USER_NAME}
    echo password: ${USER_PASSWORD}
    echo -e "${USER_PASSWORD}" >> /home/${USER_NAME}/.cldusercreds
fi
if [ -d /var/cld/access/users/${USER_NAME} ]
then
    echo user directory for $USER_NAME found
else
    echo user directory for $USER_NAME not found - creating
    mkdir -p /var/cld/access/users/${USER_NAME}
    touch /var/cld/access/users/${USER_NAME}/clouds
    touch /var/cld/access/users/${USER_NAME}/groups
    echo
    echo
fi
if [ "${USER_UTILITES}" == "ALL" -o "${USER_MODULES}" == "ALL" ]
then
    if [ "${USER_UTILITES}" == "ALL" -a "${USER_MODULES}" == "ALL" ]
    then
        echo 1 > /var/cld/access/users/${USER_NAME}/role
    else
        echo 0 > /var/cld/access/users/${USER_NAME}/role
    fi
    sed -i '/cld/d' /home/${USER_NAME}/.bashrc
    CLD_UTILS=$(ls /var/cld/bin/* /var/cld/modules/*/bin/* -pd | grep -v include)
    for CLD_UTIL in ${CLD_UTILS}
    do 
        CLD_UTIL_NAME=$(echo $CLD_UTIL | rev | cut -d / -f 1 | rev)
        echo "alias ${CLD_UTIL_NAME}='sudo FROM=CLI ${CLD_UTIL}'" >> /home/${USER_NAME}/.bashrc
    done
    sed -i '/^'${USER_NAME}' /d' /etc/sudoers
    echo "${USER_NAME} ALL=(ALL) NOPASSWD:NOSETENV: ALL" >> /etc/sudoers
elif [ "$USER_MODULES" != "NONE" -o "$USER_UTILITES" != "NONE" ]
then
    echo 0 > /var/cld/access/users/${USER_NAME}/role
    sed -i '/cld/d' /home/${USER_NAME}/.bashrc
    CLD_UTILS=$(cat << EOUTILS | sort -u
$(ls /var/cld/bin/* /var/cld/modules/*/bin/* -pd | grep -v include | grep "$(echo $USER_UTILITES | tr ',' '\n' | tr '\n' ',' | sed 's#,#$,#g' | sed 's#^\$,##g' | tr ',' '\n' )")
$(for CLD_MODULE in $(tr ',' '\n' <<< ${USER_MODULES})
do
if [ "$CLD_MODULE" == "cld" ]; then
ls /var/cld/bin/* -pd  | grep -v include
elif [ "$CLD_MODULE" == "cm"  -o "$CLD_MODULE" == "deploy" ]; then
ls /var/cld/${CLD_MODULE}/bin/* -pd  | grep -v include
else
ls /var/cld/modules/${CLD_MODULE}/bin/* -pd 2>/dev/null | grep -v include
fi
done
)
EOUTILS
)
    for CLD_UTIL in ${CLD_UTILS}
    do 
        CLD_UTIL_NAME=$(echo $CLD_UTIL | rev | cut -d / -f 1 | rev)
        echo "alias ${CLD_UTIL_NAME}='sudo FROM=CLI ${CLD_UTIL}'" >> /home/${USER_NAME}/.bashrc
    done
    sed -i '/^'${USER_NAME}' /d' /etc/sudoers
    [ "${CLD_UTILS}" ] && echo "${USER_NAME} ALL=(ALL) NOPASSWD:NOSETENV: $(for i in $CLD_UTILS ; do echo -n "$i, " ; done | sed -r 's/\,\ $//g')" >> /etc/sudoers
elif [ "$USER_MODULES" == "NONE" -o "$USER_UTILITES" == "NONE" ]
then
    echo 0 > /var/cld/access/users/${USER_NAME}/role
    sed -i '/cld/d' /home/${USER_NAME}/.bashrc
    sed -i '/^'$USER_NAME'/d' /etc/sudoers
fi
if ! [ "${USER_TOKEN}" ]
then
    USER_TOKEN=$(echo $(< /dev/urandom tr -dc ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890 | head -c${1:-25}))
    sed -i -r 's#'${USER_NAME}':(.*?)::(.*?):(.*?)#'${USER_NAME}':\1:'${USER_TOKEN}':\2:\3#g' /var/cld/creds/passwd
fi
done
for USER_PATH in $(ls /var/cld/access/users/* -d)
do
    USER_NAME=$(rev <<< $USER_PATH | cut -d / -f 1 | rev)
    if grep -q "^${USER_NAME}:" /var/cld/creds/passwd
    then
        echo -n ""
    else
        rm -f ${USER_PATH}/* &>/dev/null
        rmdir $USER_PATH &>/dev/null
        userdel ${USER_NAME} &>/dev/null
        echo $USER_NAME deleted due was not found at access rigths matrix file /var/cld/creds/passwd
    fi
done
sed -i '/cld/d' /root/.bashrc &>/dev/null
sed -i '/CLD_PATH/d' /root/.bashrc &>/dev/null
cat >> /root/.bashrc << 'EOL'
alias cld-framework='source /var/cld/bin/include/cldfuncs'
export CLD_PATH="/var/cld/bin:$(echo -n "$(ls -d /var/cld/modules/*/bin)" | tr "\n" :)"
PATH="$PATH:$CLD_PATH"
EOL