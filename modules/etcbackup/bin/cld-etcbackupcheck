#!/bin/bash
HELP_DESC=$(cat << 'EOL'
ClassicDevOps etc backup status parser
Should be setted up on cron with send and telegram chat id arguments
EOL
)
HELP_ARGS=$(cat << 'EOL'
--send=1234567           Enable send report to telegram by chat id
--groups=GROUP1,GROUP2   Filtering by instance groups
EOL
)
HELP_EXAMPLES=$(cat << 'EOL'
cld-etcbackupcheck
cld-etcbackupcheck --send=1234567
EOL
)
source /var/cld/bin/include/cldfuncs

init-load-constants TELEGRAM_BOT_TOKEN\|1234567890:AAEzBFqFii-uirfyG3PnygA0DAvJvRH7UzB ETC_STORAGE_NAME\|networkstorage ETC_BACKUP_PATH\|/networkstorage/backup/files/all_etc

ARG1=$(echo "${@:1}" | tr ' ' '\n' | grep -v '\--' | head -1)
ARG2=$(echo "${@:1}" | tr ' ' '\n' | grep -v '\--' | head -2 | tail -1)
ARG3=$(echo "${@:1}" | tr ' ' '\n' | grep -v '\--' | head -3 | tail -1)

for i in ${CLDOPTS}
do
case $i in
-g=*|-groups=*|--groups=*) CLD_GROUPS="${i#*=}"     ;;
-s=*|-send=*|--send=*) TELEGRAM_CHAT_ID="${i#*=}"   ;;
*) ;;
esac
done

CLD_GROUPS=${CLD_GROUPS:-default}

mkdir -p /var/cld/log/check_backup/$(date +%F) &>/dev/null
rm -f /var/cld/log/check_backup/$(date +%F)/status_etc &>/dev/null
echo \`Configuration backup status:\` | tee -a /var/cld/log/check_backup/$(date +%F)/status_etc
for VM in $(CLOUDS_USER_ALLOWED --groups="${CLD_GROUPS}" "$ARG1" "$ARG2" "$ARG3" | cut -d _ -f -2)
do
unset STORAGE_NAME BACKUP_PATH BACKUP_FILE BACKUP_SIZE LAST_BACKUP LAST_BACKUP_DATE
STORAGE_NAME=${ETC_STORAGE_NAME}
BACKUP_PATH=${ETC_BACKUP_PATH}
BACKUP_FILE=$(ls -h $BACKUP_PATH/$(date +%F)/$VM*.gz 2>/dev/null | tail -1)
LAST_BACKUP=$(ls -h $BACKUP_PATH/*/$VM*.gz 2>/dev/null | tail -1)
if [ "${BACKUP_FILE}" != "" ]
then
BACKUP_SIZE=$(du ${BACKUP_FILE} | tr '\t' ' ' | cut -d ' ' -f 1 | awk '{printf("%.2f\n",$1/1024)}')
test $(echo ${BACKUP_SIZE} | awk '{printf("%.2f\n",$1*1024)}' | cut -d . -f 1) -ge 400 && echo "OK - ${VM} - ${BACKUP_SIZE}M" || echo "FAIL - ${VM} - ${BACKUP_SIZE}M"
elif [ "${LAST_BACKUP}" != "" ]
then
LAST_BACKUP_DATE=$(echo "${LAST_BACKUP}" | cut -d / -f 6)
LAST_BACKUP_SIZE=$(du ${LAST_BACKUP} | tr '\t' ' ' | cut -d ' ' -f 1 | awk '{printf("%.2f\n",$1/1024)}')
test $(echo ${LAST_BACKUP_SIZE} | awk '{printf("%.2f\n",$1*1024)}' | cut -d . -f 1) -ge 400 && echo "OK - ${VM} - Last ${LAST_BACKUP_DATE} ${LAST_BACKUP_SIZE}M" || echo "FAIL - ${VM} - Last ${LAST_BACKUP_DATE} ${LAST_BACKUP_SIZE}M"
else
echo "BACKUP NOT FOUND - $VM"
fi

done | tee -a /var/cld/log/check_backup/$(date +%F)/status_etc

for SOURCE_FILE in $(ls /var/cld/log/check_backup/$(date +%F)/*)
do
split --suffix-length=2 --lines=50 --numeric-suffixes ${SOURCE_FILE} ${SOURCE_FILE}_
rm -f ${SOURCE_FILE}
done

if [ "$TELEGRAM_CHAT_ID" != "" ]
then
for STATUS_FILE in $(ls /var/cld/log/check_backup/$(date +%F)/*)
do
wget -qO- "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage?chat_id=${TELEGRAM_CHAT_ID}&parse_mode=Markdown&text=$(cat ${STATUS_FILE} | awk '{print "\`"$0"\`"}' | sed -e 's#Last#\`\*Last\*\`#g' -e 's#FAIL#\`\*FAIL\*\`#g' -e 's#NOT FOUND#\`\*NOT FOUND\*\`#g' | sed 's#\\##g' | sed ':a;N;$!ba;s#\n#%0A#g')"
sleep 0.5s
done
fi