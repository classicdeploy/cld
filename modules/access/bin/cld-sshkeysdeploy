#!/bin/bash
HELP_DESC=$(cat << 'EOL'
SSH key deploy tool
Deploying SSH keys of CLD users to allowed instances
Should be setted up on cron
EOL
)
HELP_ARGS=$(cat << 'EOL'
$1                             First PATTERN filtering allowed instances
$2                             Second PATTERN filtering allowed instances
$3                             Third PATTERN filtering allowed instances
--groups=GROUP1,GROUP2         Filtering by instance groups - default value is "default" group
--all                          Admin user option - setting up for one time run with all groups existing at CLD server regardless to access matrix - it will impact just allowed instances for current user - groups argument will still filtering as well
--delmanualkeys                Delete existing manual added keys at instances
EOL
)
HELP_EXAMPLES=$(cat << 'EOL'
cld-sshkeysdeploy
cld-sshkeysdeploy --groups=default,prod,hypervisors
EOL
)
source /var/cld/bin/include/cldfuncs
source /var/cld/modules/access/bin/include/accessfuncs

for i in ${CLDOPTS}
do
case $i in
-g=*|-groups=*|--groups=*) CLD_GROUPS="${i#*=}"                      ;;
-a|-all|--all) CLD_ALL_GROUPS_ARG="--all"                            ;;
-d|-delmanualkeys|--delmanualkeys) export SKIP_MANUAL_ADDED_KEYS="1" ;;
-*)                                                                  ;;
*) let ii++; declare ARG$ii=${i}                                     ;;
esac
done

CLD_GROUPS=${CLD_GROUPS:-default}
export MAIN_CLD_KEY="$(cat /root/.ssh/id_rsa.pub)"

[ "${MAIN_CLD_KEY}" ] || { echo Main CLD SSH key is not defined - probably you need generate it with ssh-keygen commad - exit ; exit 1 ; }

echo "${MAIN_CLD_KEY}" | egrep -q '^ssh-(rsa|ed25519) AAAA[0-9A-Za-z+/]+[=]{0,3} ?([A-Za-z0-9@._-]+)?' || { echo Main CLD SSH key is not valid - check /root/.ssh/id_rsa.pub - exit ; exit 1 ; }

head -1 /var/cld/tmp/auditor/current_access_map | egrep -q "/var/cld/tmp/access_instances_[A-Za-z0-9]{7}"  && CLD_FILTER_DIR=$(head -1 /var/cld/tmp/auditor/current_access_map) || generate_access_map

for CLD_USER in ${ALL_CLD_USERS}
do
export sshkeys_$(sed -e 's#\.#__DOT__#g' -e 's#-#__DASH__#g' <<< "${CLD_USER}")="$([ -f "/home/${CLD_USER}/.ssh/authorized_keys" ] && egrep -o --color=no '^ssh-(rsa|ed25519) AAAA[0-9A-Za-z+/]+[=]{0,3} ?([A-Za-z0-9@._-]+)?' /home/${CLD_USER}/.ssh/authorized_keys)"
done

SSHKEY_DEPLOY_DATE="$(date +%d.%m.%Y\ %H:%M)"

############## Deploy begin ##############
for VM in $(CLOUDS_USER_ALLOWED --groups="${CLD_GROUPS}" "$ARG1" "$ARG2" "$ARG3" "$CLD_ALL_GROUPS_ARG")
do
if [ "$VM" ]
then
INSTANCE_GROUP_FUNCS
$CLD_VARS
export TIMEOUT_NOTTY=45
(
$CLD_DEPLOY_NOTTY << EOSSH
$(cld_sshkey_deploy)
EOSSH
) &
fi
done

wait
rm -rf /var/cld/tmp/access_instances_${ACCESS_MAP_TASK_ID} &>/dev/null
##############  Deploy end  ##############
