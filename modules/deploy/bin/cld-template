#!/bin/bash
HELP_DESC=$(cat << 'EOL'
ClassicDevOps interactive tool to create template or create deploy from template
EOL
)
HELP_ARGS=$(cat << 'EOL'
--template=templatename            Name of template
--repoupdate                       Update template list from connected repository list in file /var/cld/modules/deploy/repo_list
--deploy=deployname                Name of deploy
--clouds=srv_1.2.3.4               Instance pattern or list comma separated
--groups=GROUP1,GROUP2             Filtering by instance groups
--test=0                           Execute test script after deploy - 0 is disabled - 1 is enabled
--retry=1                          Count of retry deploy attempts per instance if ssh connection not established
--timeout=180                      Timeout of deploy script in seconds
--testtimeout=180                  Timeout of test script in seconds
--backuptimeout=180                Timeout for backup/custombackup script         
--nextdeploy=deploy2               Using for deploy chains - blank field for single deploy
--nextdeploywait=1                 Wait the end of current deploy before start next
--nextdeployargs=--run,--test=1    Next deploy arguments comma separated
--backup=0                         Backup files of filelist before deploy - 0 is disabled - 1 is enabled
--backuplist=/etc/,/tmp/file       List of files and directories for backup before deploy
--custombackup=0                   Use custom backup script before deploy - 0 is disabled - 1 is enabled
--async=1                          Synchronous or asynchronous mode of deploy - 0 is sync - 1 is async
--debug=0                          Verbose mode of connect and additional predeploy scripts will put to the output
EOL
)
HELP_EXAMPLES=$(cat << 'EOL'
cld-template --template=templatename #CLI
cld-template --deploy=deployname #CLI
cld-template --repoupdate  
EOL
)
source /var/cld/bin/include/cldfuncs
for OPTS in ${@:1}
do
echo $OPTS | grep -q  '^\--template=' && TEMPLATE=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '^\--deploy' && DEPLOY=1
echo $OPTS | grep -q  '^\--repoupdate' && REPOUPDATE=1
done

if [ "$TEMPLATE" == "" ]
then
while ! [[ "$TEMPLATE" =~  [A-Za-z0-9-]+ ]]
do
echo "Please enter the template name using only A-Z a-z 0-9 - symbols"
read TEMPLATE
done
fi

[ "$TEMPLATE" ] || { echo template not defined ; exit 1 ; }

test "$DEPLOY" && source /var/cld/modules/deploy/templates/${TEMPLATE}/vars

for i in ${CLDOPTS}
do
case $i in
-c=*|-clouds=*|--clouds=*) CLOUDS=$(tr ',' '\n' <<< "${i#*=}")                              ;;
-g=*|-groups=*|--groups=*) CLD_GROUPS=$(tr ',' '\n' <<< "${i#*=}")                          ;;
-T=*|-test=*|--test=*) TEST="${i#*=}"                                                       ;;
-R=*|-retry=*|--retry=*) RETRY="${i#*=}"                                                    ;;
-to=*|-timeout=*|--timeout=*) TIMEOUT="${i#*=}"                                             ;;
-tt=*|-testtimeout=*|--testtimeout=*) TEST_TIMEOUT="${i#*=}"                                ;;
-bt=*|-backuptimeout=*|--backuptimeout=*) BACKUP_TIMEOUT="${i#*=}"                          ;;
-nd=*|-nextdeploy=*|--nextdeploy=*) NEXT_DEPLOY="${i#*=}"                                   ;;
-ndw=*|-nextdeploywait=*|--nextdeploywait=*) NEXT_DEPLOY_WAIT="${i#*=}"                     ;;
-nda=*|-nextdeployargs=*|--nextdeployargs=*) NEXT_DEPLOY_ARGS="${i#*=}"                     ;;
-b=*|-backup=*|--backup=*) BACKUP="${i#*=}"                                                 ;;
-cb=*|-custombackup=*|--custombackup=*) CUSTOM_BACKUP="${i#*=}"                             ;;
-a=*|-async=*|--async=*) ASYNC="${i#*=}"                                                    ;;
-D=*|-debug=*|--debug=*) DEBUG="${i#*=}"                                                    ;;
-C=*|-cron=*|--cron=*) CRON="${i#*=}"                                                       ;;
*) ;;
esac
done

create-deploy()
{
stat /var/cld/modules/deploy/deploys/${TEMPLATE} &>/dev/null && DEPLOY_EXIST=1
DEPLOY_ID=$(ls -d /var/cld/modules/deploy/deploys/${TEMPLATE}_* 2>/dev/null | tail -1 | egrep -o "_[0-9]+$" | tr -d _)
test "$DEPLOY_ID" != "" -o "$DEPLOY_EXIST" == "1" && let "DEPLOY_ID++"
test "$DEPLOY_ID" && DEPLOY_NAME="${TEMPLATE}_${DEPLOY_ID}" || DEPLOY_NAME="${TEMPLATE}"

[ "$TIMEOUT" ] || TIMEOUT=3600
[ "$TEST_TIMEOUT" ] || TEST_TIMEOUT=600
[ "$BACKUP_TIMEOUT" ] || BACKUP_TIMEOUT=600
[ "$RETRY" ] || RETRY=1

mkdir -p /var/cld/modules/deploy/deploys/ &>/dev/null
cp -r /var/cld/modules/deploy/templates/${TEMPLATE} /var/cld/modules/deploy/deploys/${DEPLOY_NAME}
test "${CLOUDS}" && echo "${CLOUDS}" > /var/cld/modules/deploy/deploys/${DEPLOY_NAME}/clouds
cat > /var/cld/modules/deploy/deploys/${DEPLOY_NAME}/vars << EOVARS
DESCRIPTION="${DESCRIPTION}"
CLD_GROUPS="${CLD_GROUPS}"
BACKUP="${BACKUP}"
CUSTOM_BACKUP="${CUSTOM_BACKUP}"
TEST="${TEST}"
RETRY="${RETRY}"
TIMEOUT="${TIMEOUT}"
TEST_TIMEOUT="${TEST_TIMEOUT}"
BACKUP_TIMEOUT="${BACKUP_TIMEOUT}"
ASYNC="${ASYNC}"
NEXT_DEPLOY="${NEXT_DEPLOY}"
NEXT_DEPLOY_WAIT="${NEXT_DEPLOY_WAIT}"
NEXT_DEPLOY_ARGS="${NEXT_DEPLOY_ARGS}"
DEBUG="${DEBUG}"
CRON="${CRON}"
EOVARS
ls /var/cld/modules/deploy/deploys/${DEPLOY_NAME}/* | cat
}

create-template()
{
[ -d /var/cld/modules/deploy/templates/${TEMPLATE} ] && { echo Template ${TEMPLATE} exist ; exit 1 ; }
mkdir -p /var/cld/modules/deploy/templates/${TEMPLATE} &>/dev/null

test "$DESCRIPTION" || DESCRIPTION=0

touch /var/cld/modules/deploy/templates/${TEMPLATE}/script

test "$BACKUP" || BACKUP=0
test "${BACKUP}" == 1 && touch /var/cld/modules/deploy/templates/${TEMPLATE}/backup_files

test "$CUSTOM_BACKUP" || CUSTOM_BACKUP=0
test "${CUSTOM_BACKUP}" == 1 && touch /var/cld/modules/deploy/templates/${TEMPLATE}/custom_backup_script
test "${CUSTOM_BACKUP}" == 1 && touch /var/cld/modules/deploy/templates/${TEMPLATE}/custom_restore_script

# test "$TEST" || TEST=0
# test "${TEST}" == 1 && 
touch /var/cld/modules/deploy/templates/${TEMPLATE}/test_script

[ "$TIMEOUT" ] || TIMEOUT=600
[ "$TEST_TIMEOUT" ] || TEST_TIMEOUT=600
[ "$BACKUP_TIMEOUT" ] || BACKUP_TIMEOUT=600
[ "$RETRY" ] || RETRY=1

test "$ASYNC" || ASYNC=0

test "$DEBUG" || DEBUG=0

echo "$CRON" | egrep -q "^(\*|([0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])|\*\/([0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])) (\*|([0-9]|1[0-9]|2[0-3])|\*\/([0-9]|1[0-9]|2[0-3])) (\*|([1-9]|1[0-9]|2[0-9]|3[0-1])|\*\/([1-9]|1[0-9]|2[0-9]|3[0-1])) (\*|([1-9]|1[0-2])|\*\/([1-9]|1[0-2])) (\*|[0-6]\*\-[0-6]|[0-6])$" || CRON=0

cat > /var/cld/modules/deploy/templates/${TEMPLATE}/vars << EOVARS
DESCRIPTION="${DESCRIPTION}"
BACKUP="${BACKUP}"
CUSTOM_BACKUP="${CUSTOM_BACKUP}"
TEST="${TEST}"
RETRY="${RETRY}"
TIMEOUT="${TIMEOUT}"
TEST_TIMEOUT="${TEST_TIMEOUT}"
BACKUP_TIMEOUT="${BACKUP_TIMEOUT}"
ASYNC="${ASYNC}"
NEXT_DEPLOY="${NEXT_DEPLOY}"
NEXT_DEPLOY_WAIT="${NEXT_DEPLOY_WAIT}"
NEXT_DEPLOY_ARGS="${NEXT_DEPLOY_ARGS}"
DEBUG="${DEBUG}"
CRON="${CRON}"
EOVARS

ls /var/cld/modules/deploy/templates/${TEMPLATE}/* | cat
}

update-templates-from-repo()
{
stat /tmp/temprepos &>/dev/null && rm -rf /tmp/temprepos/
mkdir /tmp/temprepos &>/dev/null
cd /tmp/temprepos
for TEMPLATE_REPO in $(cat /var/cld/modules/deploy/repo_list)
do
  git clone $TEMPLATE_REPO
  TEMPLATE_REPO_NAME=$(echo "${TEMPLATE_REPO}" | rev | cut -d . -f 2- | cut -d / -f -1 | rev)
  for TEMPLATE in $(ls -d ${TEMPLATE_REPO_NAME}/*/ | sed 's#/$##g')
  do
    rsync -avP ${TEMPLATE} /var/cld/modules/deploy/templates/ --delete
  done
done
}

[ "$REPOUPDATE" ] && { update-templates-from-repo ; exit 0 ; }

[ "$DEPLOY" ] && create-deploy || create-template