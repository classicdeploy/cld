#!/bin/bash
HELP_DESC=$(cat << 'EOL'
Tool for deploy Ansible playbooks
EOL
)
HELP_ARGS=$(cat << 'EOL'
$1                       First PATTERN filtering allowed instances
$2                       Second PATTERN filtering allowed instances
$3                       Third PATTERN filtering allowed instances
--playbook=foobar        Name of playbook in /var/cld/modules/ansible/data/playbook/
--vars=foo=bar,key=val   Argument to pass variables to playbook
--groups=GROUP1,GROUP2   Filtering by instance groups
--all                    Admin user option - setting up for one time run with all groups existing at CLD server regardless to access matrix
EOL
)
HELP_EXAMPLES=$(cat << 'EOL'
cld-ansible --group=kube --playbook=kubespray
cld-ansible instancepattern --group=kube --playbook=kubespray --vars=var1=value1,var2=value2
EOL
)

source /var/cld/bin/include/cldfuncs

for i in ${CLDOPTS}
do
  case $i in
    -p=*|-playbook=*|--playbook=*) PLAYBOOK="${i#*=}" ;;
    -v=*|-vars=*|--vars=*) PLAYBOOK_VARS="${i#*=}"    ;;
    -g=*|-groups=*|--groups=*) CLD_GROUPS="${i#*=}"   ;;
    -a|-all|--all) CLD_ALL_GROUPS_ARG="--all"         ;;
    -*)                                               ;;
    *) let ii++; declare ARG$ii=${i}                  ;;
  esac
done

CLD_INSTANCES=$(CLOUDS_USER_ALLOWED --groups="${CLD_GROUPS}" "$ARG1" "$ARG2" "$ARG3" "$CLD_ALL_GROUPS_ARG")
PLAYBOOK_INSTANCES=$(tr '\n' ',' <<< "${CLD_INSTANCES}")

[ "${PLAYBOOK_INSTANCES}" ] || { echo "There is no any allowed instances - try remove filter arguments or ask your system administrator add/share it" ; exit 1 ; }
[ "${PLAYBOOK}" ] || { echo Playbook is not defined - exit ; exit 1 ; }
[ -f "/var/cld/modules/ansible/data/playbook/$PLAYBOOK/environment.yml" ] || { echo "Playbook \"$PLAYBOOK\" is not exist - exit" ; exit 1 ; }
echo -e "Playbook will affect folowing instances:\n${CLD_INSTANCES}"
echo
echo Run playbook
cd /var/cld/modules/ansible/data/playbook/$PLAYBOOK/ && ansible-playbook -i ${PLAYBOOK_INSTANCES} environment.yml $([ "${PLAYBOOK_VARS}" ] && echo --extra-vars \"${PLAYBOOK_VARS}\") | sed -u 's#*##g'
[ "${PIPESTATUS[0]}" != "0" ] && { echo PLAYBOOK FAILED ; exit 1 ; }
