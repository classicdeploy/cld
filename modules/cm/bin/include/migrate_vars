
CONSTANTS=$(cat << EOCONST
KVM_ID="$KVM_ID"
KVM_SET="$KVM_SET"
KVM_NAME="$KVM_NAME"
KVM_IP="${KVM_IP}"
SOURCE_HPR="$SOURCE_HPR"
SOURCE_HPR_IP="$SOURCE_HPR_IP"
SOURCE_HPR_PORT="$SOURCE_HPR_PORT"
SOURCE_HPR_USER="$SOURCE_HPR_USER"
SOURCE_STORAGE="$SOURCE_STORAGE"
SOURCE_STORAGE_PATH="$SOURCE_STORAGE_PATH"
SOURCE_ZFS_PARTITION="$SOURCE_ZFS_PARTITION"
SOURCE_HPR_SSH_KEY="$SOURCE_HPR_SSH_KEY"
DEST_HPR="$DEST_HPR"
DEST_HPR_NAME="$DEST_HPR_NAME"
DEST_HPR_IP="$DEST_HPR_IP"
DEST_HPR_PORT="$DEST_HPR_PORT"
DEST_HPR_USER="$DEST_HPR_USER"
DEST_STORAGE="$DEST_STORAGE"
DEST_STORAGE_PATH="$DEST_STORAGE_PATH"
HPR_DC="${HPR_DC}"
EOCONST
)

PREPARE_SOURCE_HPR=$(cat << 'EOPREPARE'
cat > /root/.ssh/config << EOL
Host $DEST_HPR_NAME
Hostname $DEST_HPR_IP
User $DEST_HPR_USER
Port $DEST_HPR_PORT
UserKnownHostsFile /dev/null
StrictHostKeyChecking no

EOL
ssh -q -o StrictHostKeyChecking=no -p $DEST_HPR_PORT $DEST_HPR_USER@$DEST_HPR_IP "exit" &>/dev/null
dpkg --list | grep -q pve-zsync || apt install pve-zsync -y
EOPREPARE

)

PREPARE_DEST_HPR=$(cat << 'EOPREPARE'
grep -q "${SOURCE_HPR_SSH_KEY}" /root/.ssh/authorized_keys || echo "${SOURCE_HPR_SSH_KEY}" >> /root/.ssh/authorized_keys
dpkg --list | grep -q pve-zsync || apt install pve-zsync -y
EOPREPARE
)

PVE_ZSYNC=$(cat << 'EOLPVEZSYNC'
cat << EOL
/usr/sbin/pve-zsync sync --source ${SOURCE_ZFS_PARTITION} --dest ${DEST_HPR_NAME}:${DEST_STORAGE_PATH} --verbose --name $KVM_NAME --skip
EOL
/usr/sbin/pve-zsync sync --source ${SOURCE_ZFS_PARTITION} --dest ${DEST_HPR_NAME}:${DEST_STORAGE_PATH} --verbose --name $KVM_NAME --skip
EOLPVEZSYNC
)

KVM_STOP=$(cat << 'EOKVMSTOP'
sleep 3s
qm unlock $KVM_ID &>/dev/null
qm stop $KVM_ID
EOKVMSTOP
)

SWITCH_KVM_CONFIGS=$(cat << 'EODONE'
sleep 3s
rsync -avP --no-perms /etc/pve/qemu-server/${KVM_ID}.conf ${DEST_HPR_NAME}:/etc/pve/qemu-server/
mv /etc/pve/qemu-server/${KVM_ID}.conf /root/${KVM_ID}.conf_$(date +%F_%H-%M)
EODONE
)

START_KVM=$(cat << 'EODONE'
sed "s#$SOURCE_STORAGE#$DEST_STORAGE#g" /etc/pve/qemu-server/${KVM_ID}.conf > /tmp/${KVM_ID}.conf
cat /tmp/${KVM_ID}.conf > /etc/pve/qemu-server/${KVM_ID}.conf
sleep 3s
qm start $KVM_ID
EODONE
)

DETECT_MOUNT_ZFS_STORAGE=$(cat << 'EOL'
storage=`grep "scsi0:" /etc/pve/qemu-server/${KVM_ID}.conf | cut -d ' ' -f 2 | cut -d ':' -f 1`
path1=`grep -A1 $storage /etc/pve/storage.cfg | grep "pool\ " | awk '{print $2}'`
path2=`grep "scsi0:" /etc/pve/qemu-server/${KVM_ID}.conf | cut -d ',' -f 1 | cut -d ':' -f 3`
filepath=`readlink -e /dev/zvol/${path1}/${path2}`
END_SECOND_PARTITION=`fdisk -l $filepath | grep p2 | awk '{print $2}'`
UNIT=`fdisk -l $filepath | grep Units | cut -d ' ' -f 6`
sleep 5s
mkdir -p /mnt/vm${KVM_ID}
mount -o loop,offset=$(($END_SECOND_PARTITION * $UNIT)) $filepath /mnt/vm${KVM_ID}
EOL
)

UMOUNT_ZFS_CHECK=$(cat << 'EOL'
umount /mnt/vm${KVM_ID}
e2fsck -fp ${filepath}p2
resize2fs ${filepath}p2
EOL
)

DETECT_OS_REPLACE_GATEWAY=$(cat << 'EOL'
cat /mnt/vm${KVM_ID}/etc/*-release
if grep --quiet 'stretch' /mnt/vm${KVM_ID}/etc/*-release ; then
sed -i -r 's#(.*gateway\ )'.*'#\1'$GATEWAY'#g' /mnt/vm${KVM_ID}/etc/network/interfaces
elif grep --quiet 'CentOS release 6' /mnt/vm${KVM_ID}/etc/*-release ; then
sed -i -r 's#(GATEWAY=)'.*'#\1'$GATEWAY'#g' /mnt/vm${KVM_ID}/etc/sysconfig/network-scripts/ifcfg-eth0
elif grep --quiet 'Linux release 7' /mnt/vm${KVM_ID}/etc/*-release ; then
sed -i -r 's#(GATEWAY=")'.*'#\1'$GATEWAY'"#g' /mnt/vm${KVM_ID}/etc/sysconfig/network-scripts/ifcfg-eth0
elif grep --quiet 'CentOS Linux 8' /mnt/vm${KVM_ID}/etc/*-release ; then
sed -i -r 's#(GATEWAY=")'.*'#\1'$GATEWAY'"#g' /mnt/vm${KVM_ID}/etc/sysconfig/network-scripts/ifcfg-ens18
elif grep --quiet 'xenial\|yakkety' /mnt/vm${KVM_ID}/etc/*-release ; then
sed -i -r 's#(.*gateway\ )'.*'#\1'$GATEWAY'#g' /mnt/vm${KVM_ID}/etc/network/interfaces
elif grep --quiet 'bionic\|cosmic' /mnt/vm${KVM_ID}/etc/*-release ; then
sed -i -r 's#- to: ([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)/32#- to: '$GATEWAY'/32#g' /mnt/vm${KVM_ID}/etc/netplan/50-cloud-init.yaml
else
echo Operation system is not supported
fi
EOL
)