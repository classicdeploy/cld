TEMPLATE_ID=$(echo "$OS_SETS" | grep "$OS" | cut -d _ -f 2)
RECEIVED=1
if [ "$OS" = "" ] ; then
 echo "OS is not defined" ; exit 1
elif echo "$OS" | grep --quiet "CENTOS7" ; then
# KVM_CREATE=$CENTOS7_CREATE
 OS_CONFIGURATION=$CENTOS7_CONFIGURATION
 AUTOLOGIN_ON=$CENTOS7_AUTOLOGIN_ON
 AUTOLOGIN_OFF=$CENTOS7_AUTOLOGIN_OFF
elif echo "$OS" | grep --quiet "CENTOS8" ; then
 # KVM_CREATE=$CENTOS8_CREATE
 OS_CONFIGURATION=$CENTOS8_CONFIGURATION
 AUTOLOGIN_ON=$CENTOS8_AUTOLOGIN_ON
 AUTOLOGIN_OFF=$CENTOS8_AUTOLOGIN_OFF
elif echo "$OS" | grep --quiet "FEDORA28" ; then
# KVM_CREATE=$FEDORA28_CREATE
 OS_CONFIGURATION=$FEDORA28_CONFIGURATION
 AUTOLOGIN_ON=$FEDORA28_AUTOLOGIN_ON
 AUTOLOGIN_OFF=$FEDORA28_AUTOLOGIN_OFF
elif echo "$OS" | grep --quiet "CENTOS6" ; then
# KVM_CREATE=$CENTOS6_CREATE
 OS_CONFIGURATION=$CENTOS6_CONFIGURATION
 AUTOLOGIN_ON=$CENTOS6_AUTOLOGIN_ON
 AUTOLOGIN_OFF=$CENTOS6_AUTOLOGIN_OFF
elif echo "$OS" | grep --quiet "UBUNTU16" ; then
# KVM_CREATE=$UBUNTU16_CREATE
 OS_CONFIGURATION=$UBUNTU16_CONFIGURATION
 AUTOLOGIN_ON=$UBUNTU16_AUTOLOGIN_ON
 AUTOLOGIN_OFF=$UBUNTU16_AUTOLOGIN_OFF
elif echo "$OS" | grep --quiet "UBUNTU18" ; then
# KVM_CREATE=$UBUNTU18_CREATE
 OS_CONFIGURATION=$UBUNTU18_CONFIGURATION
 DETECT_RESIZE_MOUNT_ZFS_STORAGE=$DETECT_RESIZE_MOUNT_ZFS_STORAGE_GPT
 AUTOLOGIN_ON=$UBUNTU18_AUTOLOGIN_ON
 AUTOLOGIN_OFF=$UBUNTU18_AUTOLOGIN_OFF
elif echo "$OS" | grep --quiet "DEBIAN9" ; then
# KVM_CREATE=$DEBIAN9_CREATE
 OS_CONFIGURATION=$DEBIAN9_CONFIGURATION
 AUTOLOGIN_ON=$DEBIAN9_AUTOLOGIN_ON
 AUTOLOGIN_OFF=$DEBIAN9_AUTOLOGIN_OFF
elif echo "$OS" | grep --quiet "FREEBSD11" ; then
# KVM_CREATE=$FREEBSD11_CREATE
 OS_CONFIGURATION=$FREEBSD11_CONFIGURATION
 DETECT_RESIZE_MOUNT_ZFS_STORAGE=""
 UMOUNT_ZFS_CHECK_START='qm start $VMID ; qm set $VMID -delete ide2 ; (while :; do qm status $VMID | grep -q stopped && qm start $VMID && break ; sleep 1s ; done) &>/dev/null & disown'
 ADD_KEYS=""
 RECEIVED=1
else
 echo "Please Select the OS and use format cm-create OS NAME CPU RAM DISK IP GATE" ; exit 1
fi

source /var/cld/modules/cm/bin/include/template_vars
source /var/cld/modules/cm/bin/include/template_logic
source /var/cld/modules/cm/bin/include/template_functions

if [ "$STORAGE_TYPE" = "" ] ; then
 echo "Please Select the STORAGE_TYPE and use format cm-create OS NAME CPU RAM DISK IP GATE" ; exit 1
elif echo "$STORAGE_TYPE" | grep --quiet "lvm" ; then
 DETECT_RESIZE_MOUNT_STORAGE=$DETECT_RESIZE_MOUNT_LVM_STORAGE
 UMOUNT_STORAGE_CHECK_START=$UMOUNT_LVM_CHECK_START
elif echo "$STORAGE_TYPE" | grep --quiet "zfs" ; then
 DETECT_RESIZE_MOUNT_STORAGE=$DETECT_RESIZE_MOUNT_ZFS_STORAGE
 UMOUNT_STORAGE_CHECK_START=$UMOUNT_ZFS_CHECK_START
else
 echo "Please Select the STORAGE_TYPE and use format cm-create OS NAME CPU RAM DISK IP GATE" ; exit 1
fi

if [ "$AUTO_LOGIN" = "1" ] ; then
 AUTOLOGIN=$AUTOLOGIN_ON
else
 AUTOLOGIN=$AUTOLOGIN_OFF
fi

if [ "$PRIVATENET" = "" ] ; then unset PRIVATE_NET_FILTER_SET ; fi

CONSTANTS=$(cat << EOL
VMNAME=$VMNAME
VMID=$VMID
VMCPU=$VMCPU
VMMEMORY=$VMMEMORY
DISK=$DISK
IPADDR=$IPADDR
GATEWAY=$GATEWAY
NTMASK=$NTMASK
TEMPLATE_ID=${TEMPLATE_ID}
STORAGE=$STORAGE
NTWRK=$NTWRK
BRDCST=$BRDCST
CIDR=$CIDR
ROOTPASSWORD=$ROOTPASSWORD
SSH_KEYS="$SSH_KEYS"
MACADDR=$MACADDR
PRIVATENET=$PRIVATENET
EOL
)

CMD_CREATE_SET=$(cat << EOCREATE
$CONSTANTS
$KVM_CREATE
$CONFIGURE_KVM
$TEMPLATE_CONFIGURE
$DC_CONFIGURE_KVM
$CLOUD_IP_FILTER
$PRIVATE_NET_FILTER_SET
$DETECT_RESIZE_MOUNT_STORAGE
$OS_CONFIGURATION
$DC_OS_CONFIGURATION
$AUTOLOGIN
$ADD_KEYS
$UMOUNT_STORAGE_CHECK_START
$TEMPLATE_AFTER_START
EOCREATE
)
