#!/bin/bash
HELP_DESC=$(cat << 'EOL'
Return json of whois information for FQDN - using for api.whois.vu service
Note: it have limit of free requests
EOL
)
HELP_ARGS=$(cat << 'EOL'
$1                       FQDN
-i/-exp/--expire         Show domain expire information only
EOL
)
HELP_EXAMPLES=$(cat << 'EOL'
cld-whois example.com
EOL
)
source /var/cld/bin/include/cldfuncs
source /var/cld/modules/dns/bin/include/dnsfuncs

for i in ${CLDOPTS}
do
case $i in
-e|-exp|-expire|--exp|--expire) EXPIRE=1    ;;
*) ;;
esac
done

ARG1=$(echo "${@:1}" | tr ' ' '\n' | grep -v '\--' | head -1)

DNS_ZONE=${ARG1,,}
MAIN_ZONE=$(echo $DNS_ZONE | rev | cut -d . -f -2 | rev)
CONTENT=$(echo $2 | cut -d _ -f 1)

echo $DNS_ZONE | egrep -q "^[a-z0-9.*-]+\.[a-z0-9.-]+$" \
|| echoexit1 "incorrect domain - only full domain names allowed: example.com test.example.com"

if [ "$EXPIRE" ]
then
EXPIRE_TIMESTAMP=$(wget -qO- "http://api.whois.vu/?q=${MAIN_ZONE}&clean" | jq .expires)
cat << EOL | jq .
{
"Expire days": $(echo $EXPIRE_TIMESTAMP $(date +%s) | awk '{print ($1-$2)/60/60/24}' | cut -d . -f 1),
"Expire date": "$(date +%F --date=@$EXPIRE_TIMESTAMP)",
"Expire timestamp": $EXPIRE_TIMESTAMP
}
EOL
else
wget -qO- "http://api.whois.vu/?q=${MAIN_ZONE}&clean" | jq . | sed -e 's#\\n#\n#g' -e 's#\\r##g' | grep -v "%" | tr '\n' '№' | awk -F 'Last update' '{print $1}' | tr '№' '\n' | grep -v '>>>' #| awk -v f="$F" -v b="$B" '{print f$0f}'
fi