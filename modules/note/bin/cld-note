#!/bin/bash
HELP_DESC=$(cat << 'EOL'
Recursive filtering search around files in notes
Output is list of matched files
EOL
)
HELP_ARGS=$(cat << 'EOL'
$1-$20                   Patterns for recursive filtering
--json                   JSON output
--beauty                 Using together with --json option to beautify json output
EOL
)
HELP_EXAMPLES=$(cat << 'EOL'
cld-note watch mysql process
EOL
)
source /var/cld/bin/include/cldfuncs

for i in ${CLDOPTS}
do
case $i in
-j|-json|--json) JSON=1             ;;
-b|-beauty|--beauty) JSON_BEAUTY=1  ;;
*) ;;
esac
done

CUT_ARG=' | cut -d / -f7'

[ "$JSON" == "1" ] && JSON_ARG=$(cat << 'EOL'
 | jq -R -s -c 'split("\n")[:-1]'
EOL
)
[ "$JSON_BEAUTY" == "1" -a "$FROM" == "API" ] && JSON_BEAUTY_ARG=' | jq . -C'
[ "$JSON_BEAUTY" == "1" -a "$FROM" != "API" ] && JSON_BEAUTY_ARG=' | jq .'

ARG_LIST=$(echo ${@:1} | tr ' ' '\n' | grep -v '^\-')
[ "$ARG_LIST" ] || ARG_LIST='.'

itter=1
source <(for ARG in ${ARG_LIST}
do
if [ "$itter" = "1" ]
then
echo -n grep -Rlim 1 "$ARG" /var/cld/modules/note/data/ 
else
echo -n ' |' xargs -I ^ grep -lim 1 "$ARG" ^
fi
let itter++
done
echo -n ${CUT_ARG} ${JSON_ARG} ${JSON_BEAUTY_ARG}
)