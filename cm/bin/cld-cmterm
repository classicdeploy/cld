#!/bin/bash
HELP_DESC=$(cat << 'EOL'
KVM Terminal
Note: root password of KVM will changed and shown before assigment kvm terminal
EOL
)
HELP_ARGS=$(cat << 'EOL'
$1                                        First PATTERN filtering allowed KVMs
$2                                        Second PATTERN filtering allowed KVMs
$3                                        Third PATTERN filtering allowed KVMs
--id=10001                                KVM id
--hyper=HPR-1-pve_1.2.3.4_22_root         Hypervisor of target KVM
EOL
)
HELP_EXAMPLES=$(cat << 'EOL'
cld-cmterm
cld-cmterm kvm.name
cld-cmterm hypervisor
cld-cmterm 12345
EOL
)
HELP_ONLY="CLI"
source /var/cld/bin/include/cldfuncs
source /var/cld/cm/bin/include/dc_funcs
source /var/cld/cm/bin/include/create_funcs

for i in ${CLDOPTS}
do
case $i in
-i=*|-id=*|--id=*) KVM_ID="${i#*=}"     ;;
-H=*|-hyper=*|--hyper=*) HPR="${i#*=}"  ;;
-*)                                     ;;
*) let ii++; declare ARG$ii=${i}        ;;
esac
done

init-load-constants HYPERVISOR_NAME_PREFIX\|HPR

[ "$HYPERVISOR_NAME_PREFIX" == "" ] && HYPERVISOR_NAME_PREFIX=HPR

if [ "$KVM_ID" != "" -a "$HPR" != "" ]
then
KVM_SET=$(grep -s "_${KVM_ID}_" /var/cld/cm/tmp/kvm_list | grep "$(cut -d _ -f 1 <<< "$HPR")")
[ "${KVM_SET}" ] || KVM_SET=$(get-kvm-list 2>/dev/null | grep "_${KVM_ID}_" | grep "_$(cut -d _ -f 1 <<< "$HPR")")
fi

if [ "$KVM_SET" = "" ]
then
echo KVM_SET is not defined - parsing hypervisors
echo Please choose KVM to activate console
select KVM_SET in $(get-kvm-list 2>/dev/null | grep -i "$ARG1" | grep -i "$ARG2" | grep -i "$ARG3")
do
if [ "$KVM_SET" ]
then
KVM_SET=$KVM_SET
echo
break
fi
done
fi
[ "${KVM_SET}" ] || echoexit1 KVM_SET is not defined - exit
HPR_NAME=$(cut -d _ -f 3 <<< ${KVM_SET})
KVM_NAME=$(cut -d _ -f 1 <<< ${KVM_SET})
KVM_ID=$(cut -d _ -f 2 <<< ${KVM_SET})
[ "$KVM_ID" ] || echoexit1 KVM_ID is not defined - exit
[ "$KVM_NAME" ] || echoexit1 KVM_NAME is not defined - exit
[ "$HPR_NAME" ] || echoexit1 HPR_NAME is not defined - exit

DEPLOY_SCRIPT=$(cat << 'EOL'
ROOTPASSWORD=$(cat /dev/urandom | tr -dc abcdefjhgkmnopqrstuvwxyzABCDEFJHGKLMNPQRSTUVWXYZ1234567890 | head -c 25)
echo -e "${ROOTPASSWORD}\n${ROOTPASSWORD}\n" | sudo qm guest passwd ${KVM_ID} root && echo New root password: ${ROOTPASSWORD} || echo Password change failed for: ${ROOTPASSWORD}
echo
EOL
)

if [ "${HPR}" == "" ]
then
HPR=$(CLOUDS_USER_ALLOWED | grep -i "^$HYPERVISOR_NAME_PREFIX" | grep "^${HPR_NAME}_")
fi
[ "${HPR}" ] || echoexit1 Target hypervisor is not defined - exit

VM=$(CLOUDS_USER_ALLOWED | grep "^${HPR}" | tail -1)
CLD_LOGS
if [ "$VM" ]
then
INSTANCE_GROUP_FUNCS
$CLD_VARS
$CLD_DEPLOY_NOTTY << EOSSH
KVM_ID=${KVM_ID}
${DEPLOY_SCRIPT}
EOSSH
[ "$USR" == "root" ] && sshpass -p "$PWD" ssh -q $VERBOSE -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" -p $PRT $USR@$SRV "qm terminal ${KVM_ID}" | tee -a $CLD_LOG
[ "$USR" == "root" ] || sshpass -p "$PWD" ssh -q $VERBOSE -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" -p $PRT $USR@$SRV "sudo qm terminal ${KVM_ID}" | tee -a $CLD_LOG
else
echoexit1 Target hypervisor for deploy script is not defined - exit
fi